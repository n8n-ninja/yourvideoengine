{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "The AWS CloudFormation template for this Serverless application",
  "Resources": {
    "SubmitLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/green-screen-remover-dev-submit"
      }
    },
    "StatusLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/green-screen-remover-dev-status"
      }
    },
    "WorkerLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/green-screen-remover-dev-worker"
      }
    },
    "IamRoleLambdaExecution": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": {
              "Fn::Join": [
                "-",
                [
                  "green-screen-remover",
                  "dev",
                  "lambda"
                ]
              ]
            },
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogStream",
                    "logs:CreateLogGroup",
                    "logs:TagResource"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/green-screen-remover-dev*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:PutLogEvents"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/green-screen-remover-dev*:*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "dynamodb:*"
                  ],
                  "Resource": "arn:aws:dynamodb:us-east-1:*:table/green-screen-jobs"
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "s3:*"
                  ],
                  "Resource": "arn:aws:s3:::your-video-engine-uploads/*"
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "sqs:*"
                  ],
                  "Resource": "*"
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "ssm:GetParameter"
                  ],
                  "Resource": "*"
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "sqs:ReceiveMessage",
                    "sqs:DeleteMessage",
                    "sqs:GetQueueAttributes"
                  ],
                  "Resource": [
                    {
                      "Fn::GetAtt": [
                        "JobQueue",
                        "Arn"
                      ]
                    }
                  ]
                }
              ]
            }
          }
        ],
        "Path": "/",
        "RoleName": {
          "Fn::Join": [
            "-",
            [
              "green-screen-remover",
              "dev",
              {
                "Ref": "AWS::Region"
              },
              "lambdaRole"
            ]
          ]
        }
      }
    },
    "SubmitLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "serverless-framework-deployments-us-east-1-abe88c38-3b47",
          "S3Key": "serverless/green-screen-remover/dev/1748891813741-2025-06-02T19:16:53.741Z/green-screen-remover.zip"
        },
        "Handler": "src/submit.handler",
        "Runtime": "nodejs20.x",
        "FunctionName": "green-screen-remover-dev-submit",
        "MemorySize": 3008,
        "Timeout": 29,
        "Environment": {
          "Variables": {
            "OUTPUT_BUCKET": "your-video-engine-uploads",
            "JOBS_TABLE": "green-screen-jobs",
            "JOB_QUEUE_URL": {
              "Ref": "JobQueue"
            },
            "NODE_OPTIONS": "--enable-source-maps"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "SubmitLogGroup"
      ]
    },
    "StatusLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "serverless-framework-deployments-us-east-1-abe88c38-3b47",
          "S3Key": "serverless/green-screen-remover/dev/1748891813741-2025-06-02T19:16:53.741Z/green-screen-remover.zip"
        },
        "Handler": "src/status.handler",
        "Runtime": "nodejs20.x",
        "FunctionName": "green-screen-remover-dev-status",
        "MemorySize": 3008,
        "Timeout": 29,
        "Environment": {
          "Variables": {
            "OUTPUT_BUCKET": "your-video-engine-uploads",
            "JOBS_TABLE": "green-screen-jobs",
            "JOB_QUEUE_URL": {
              "Ref": "JobQueue"
            },
            "NODE_OPTIONS": "--enable-source-maps"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "StatusLogGroup"
      ]
    },
    "WorkerLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "serverless-framework-deployments-us-east-1-abe88c38-3b47",
          "S3Key": "serverless/green-screen-remover/dev/1748891813741-2025-06-02T19:16:53.741Z/green-screen-remover.zip"
        },
        "Handler": "src/worker.handler",
        "Runtime": "nodejs20.x",
        "FunctionName": "green-screen-remover-dev-worker",
        "MemorySize": 3008,
        "Timeout": 900,
        "Environment": {
          "Variables": {
            "OUTPUT_BUCKET": "your-video-engine-uploads",
            "JOBS_TABLE": "green-screen-jobs",
            "JOB_QUEUE_URL": {
              "Ref": "JobQueue"
            },
            "NODE_OPTIONS": "--enable-source-maps"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Layers": [
          "arn:aws:lambda:us-east-1:339712823540:layer:ffmpeg:1"
        ]
      },
      "DependsOn": [
        "WorkerLogGroup"
      ]
    },
    "SubmitLambdaVersionmQFooZJ1unwYsFT5FIXFQdYLPerk3f3CkKGadOohlc": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "SubmitLambdaFunction"
        },
        "CodeSha256": "SwGLOxFiL2gJCQHEt9JNLVV/rEujK4rb2zHr7SWCyUM="
      }
    },
    "StatusLambdaVersions2CZH6b8IgkfKEUMPjYSb5LgqSQNMOpCdFAt3IBUee0": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "StatusLambdaFunction"
        },
        "CodeSha256": "SwGLOxFiL2gJCQHEt9JNLVV/rEujK4rb2zHr7SWCyUM="
      }
    },
    "WorkerLambdaVersionz45l8AN2DJstm4JbwkfXUve2YjyYAmwC2jiIU9Jk": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "WorkerLambdaFunction"
        },
        "CodeSha256": "SwGLOxFiL2gJCQHEt9JNLVV/rEujK4rb2zHr7SWCyUM="
      }
    },
    "ApiGatewayRestApi": {
      "Type": "AWS::ApiGateway::RestApi",
      "Properties": {
        "Name": "dev-green-screen-remover",
        "EndpointConfiguration": {
          "Types": [
            "EDGE"
          ]
        },
        "Policy": ""
      }
    },
    "ApiGatewayResourceSubmit": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "ApiGatewayRestApi",
            "RootResourceId"
          ]
        },
        "PathPart": "submit",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayResourceStatus": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "ApiGatewayRestApi",
            "RootResourceId"
          ]
        },
        "PathPart": "status",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayResourceStatusJobidVar": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Ref": "ApiGatewayResourceStatus"
        },
        "PathPart": "{jobId}",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayMethodSubmitPost": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "POST",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceSubmit"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "SubmitLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "SubmitLambdaPermissionApiGateway"
      ]
    },
    "ApiGatewayMethodStatusJobidVarGet": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceStatusJobidVar"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "StatusLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "StatusLambdaPermissionApiGateway"
      ]
    },
    "ApiGatewayDeployment1748891807616": {
      "Type": "AWS::ApiGateway::Deployment",
      "Properties": {
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "StageName": "dev"
      },
      "DependsOn": [
        "ApiGatewayMethodSubmitPost",
        "ApiGatewayMethodStatusJobidVarGet"
      ]
    },
    "SubmitLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "SubmitLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "StatusLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "StatusLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "WorkerEventSourceMappingSQSJobQueue": {
      "Type": "AWS::Lambda::EventSourceMapping",
      "DependsOn": [
        "IamRoleLambdaExecution"
      ],
      "Properties": {
        "BatchSize": 10,
        "EventSourceArn": {
          "Fn::GetAtt": [
            "JobQueue",
            "Arn"
          ]
        },
        "FunctionName": {
          "Fn::GetAtt": [
            "WorkerLambdaFunction",
            "Arn"
          ]
        },
        "Enabled": true
      }
    },
    "JobQueue": {
      "Type": "AWS::SQS::Queue",
      "Properties": {
        "QueueName": "GreenScreenJobQueue",
        "VisibilityTimeout": 65
      }
    },
    "JobsTable": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "TableName": "green-screen-jobs",
        "BillingMode": "PAY_PER_REQUEST",
        "AttributeDefinitions": [
          {
            "AttributeName": "jobId",
            "AttributeType": "S"
          }
        ],
        "KeySchema": [
          {
            "AttributeName": "jobId",
            "KeyType": "HASH"
          }
        ]
      }
    }
  },
  "Outputs": {
    "ServerlessDeploymentBucketName": {
      "Value": "serverless-framework-deployments-us-east-1-abe88c38-3b47",
      "Export": {
        "Name": "sls-green-screen-remover-dev-ServerlessDeploymentBucketName"
      }
    },
    "SubmitLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "SubmitLambdaVersionmQFooZJ1unwYsFT5FIXFQdYLPerk3f3CkKGadOohlc"
      },
      "Export": {
        "Name": "sls-green-screen-remover-dev-SubmitLambdaFunctionQualifiedArn"
      }
    },
    "StatusLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "StatusLambdaVersions2CZH6b8IgkfKEUMPjYSb5LgqSQNMOpCdFAt3IBUee0"
      },
      "Export": {
        "Name": "sls-green-screen-remover-dev-StatusLambdaFunctionQualifiedArn"
      }
    },
    "WorkerLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "WorkerLambdaVersionz45l8AN2DJstm4JbwkfXUve2YjyYAmwC2jiIU9Jk"
      },
      "Export": {
        "Name": "sls-green-screen-remover-dev-WorkerLambdaFunctionQualifiedArn"
      }
    },
    "ServiceEndpoint": {
      "Description": "URL of the service endpoint",
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "ApiGatewayRestApi"
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region"
            },
            ".",
            {
              "Ref": "AWS::URLSuffix"
            },
            "/dev"
          ]
        ]
      },
      "Export": {
        "Name": "sls-green-screen-remover-dev-ServiceEndpoint"
      }
    }
  }
}