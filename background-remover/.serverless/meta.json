{
  "/Users/manu/work/02_yourvideoengine/background-remover/serverless.yml": {
    "versionFramework": "4.16.1",
    "servicePath": "/Users/manu/work/02_yourvideoengine/background-remover/serverless.yml",
    "serviceConfigFileName": "serverless.yml",
    "service": {
      "service": "green-screen-remover",
      "provider": {
        "name": "aws",
        "runtime": "nodejs20.x",
        "region": "us-east-1",
        "memorySize": 3008,
        "timeout": 900,
        "environment": {
          "OUTPUT_BUCKET": "your-video-engine-uploads",
          "JOBS_TABLE": "green-screen-jobs",
          "JOB_QUEUE_URL": {
            "Ref": "JobQueue"
          }
        },
        "iamRoleStatements": [
          {
            "Effect": "Allow",
            "Action": [
              "dynamodb:*"
            ],
            "Resource": "arn:aws:dynamodb:us-east-1:*:table/green-screen-jobs"
          },
          {
            "Effect": "Allow",
            "Action": [
              "s3:*"
            ],
            "Resource": "arn:aws:s3:::your-video-engine-uploads/*"
          },
          {
            "Effect": "Allow",
            "Action": [
              "sqs:*"
            ],
            "Resource": "*"
          },
          {
            "Effect": "Allow",
            "Action": [
              "ssm:GetParameter"
            ],
            "Resource": "*"
          }
        ],
        "stage": "dev",
        "versionFunctions": true,
        "compiledCloudFormationTemplate": {
          "AWSTemplateFormatVersion": "2010-09-09",
          "Description": "The AWS CloudFormation template for this Serverless application",
          "Resources": {
            "SubmitLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/green-screen-remover-dev-submit"
              }
            },
            "StatusLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/green-screen-remover-dev-status"
              }
            },
            "WorkerLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/green-screen-remover-dev-worker"
              }
            },
            "IamRoleLambdaExecution": {
              "Type": "AWS::IAM::Role",
              "Properties": {
                "AssumeRolePolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Principal": {
                        "Service": [
                          "lambda.amazonaws.com"
                        ]
                      },
                      "Action": [
                        "sts:AssumeRole"
                      ]
                    }
                  ]
                },
                "Policies": [
                  {
                    "PolicyName": {
                      "Fn::Join": [
                        "-",
                        [
                          "green-screen-remover",
                          "dev",
                          "lambda"
                        ]
                      ]
                    },
                    "PolicyDocument": {
                      "Version": "2012-10-17",
                      "Statement": [
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:CreateLogStream",
                            "logs:CreateLogGroup",
                            "logs:TagResource"
                          ],
                          "Resource": [
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/green-screen-remover-dev*:*"
                            }
                          ]
                        },
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:PutLogEvents"
                          ],
                          "Resource": [
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/green-screen-remover-dev*:*:*"
                            }
                          ]
                        },
                        {
                          "Effect": "Allow",
                          "Action": [
                            "dynamodb:*"
                          ],
                          "Resource": "arn:aws:dynamodb:us-east-1:*:table/green-screen-jobs"
                        },
                        {
                          "Effect": "Allow",
                          "Action": [
                            "s3:*"
                          ],
                          "Resource": "arn:aws:s3:::your-video-engine-uploads/*"
                        },
                        {
                          "Effect": "Allow",
                          "Action": [
                            "sqs:*"
                          ],
                          "Resource": "*"
                        },
                        {
                          "Effect": "Allow",
                          "Action": [
                            "ssm:GetParameter"
                          ],
                          "Resource": "*"
                        },
                        {
                          "Effect": "Allow",
                          "Action": [
                            "sqs:ReceiveMessage",
                            "sqs:DeleteMessage",
                            "sqs:GetQueueAttributes"
                          ],
                          "Resource": [
                            {
                              "Fn::GetAtt": [
                                "JobQueue",
                                "Arn"
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  }
                ],
                "Path": "/",
                "RoleName": {
                  "Fn::Join": [
                    "-",
                    [
                      "green-screen-remover",
                      "dev",
                      {
                        "Ref": "AWS::Region"
                      },
                      "lambdaRole"
                    ]
                  ]
                }
              }
            },
            "SubmitLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-us-east-1-abe88c38-3b47",
                  "S3Key": "serverless/green-screen-remover/dev/1749110425255-2025-06-05T08:00:25.255Z/green-screen-remover.zip"
                },
                "Handler": "src/submit.handler",
                "Runtime": "nodejs20.x",
                "FunctionName": "green-screen-remover-dev-submit",
                "MemorySize": 3008,
                "Timeout": 29,
                "Environment": {
                  "Variables": {
                    "OUTPUT_BUCKET": "your-video-engine-uploads",
                    "JOBS_TABLE": "green-screen-jobs",
                    "JOB_QUEUE_URL": {
                      "Ref": "JobQueue"
                    },
                    "NODE_OPTIONS": "--enable-source-maps"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "SubmitLogGroup"
              ]
            },
            "StatusLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-us-east-1-abe88c38-3b47",
                  "S3Key": "serverless/green-screen-remover/dev/1749110425255-2025-06-05T08:00:25.255Z/green-screen-remover.zip"
                },
                "Handler": "src/status.handler",
                "Runtime": "nodejs20.x",
                "FunctionName": "green-screen-remover-dev-status",
                "MemorySize": 3008,
                "Timeout": 29,
                "Environment": {
                  "Variables": {
                    "OUTPUT_BUCKET": "your-video-engine-uploads",
                    "JOBS_TABLE": "green-screen-jobs",
                    "JOB_QUEUE_URL": {
                      "Ref": "JobQueue"
                    },
                    "NODE_OPTIONS": "--enable-source-maps"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "StatusLogGroup"
              ]
            },
            "WorkerLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-us-east-1-abe88c38-3b47",
                  "S3Key": "serverless/green-screen-remover/dev/1749110425255-2025-06-05T08:00:25.255Z/green-screen-remover.zip"
                },
                "Handler": "src/worker.handler",
                "Runtime": "nodejs20.x",
                "FunctionName": "green-screen-remover-dev-worker",
                "MemorySize": 3008,
                "Timeout": 900,
                "Environment": {
                  "Variables": {
                    "OUTPUT_BUCKET": "your-video-engine-uploads",
                    "JOBS_TABLE": "green-screen-jobs",
                    "JOB_QUEUE_URL": {
                      "Ref": "JobQueue"
                    },
                    "NODE_OPTIONS": "--enable-source-maps"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                },
                "Layers": [
                  "arn:aws:lambda:us-east-1:339712823540:layer:ffmpeg:1"
                ]
              },
              "DependsOn": [
                "WorkerLogGroup"
              ]
            },
            "SubmitLambdaVersionajcJUsmmO7Yd3Orn9ckeOYB0lYkRysGhUXPLLI": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "SubmitLambdaFunction"
                },
                "CodeSha256": "qw3p1DbmVwcRmTm49iEuQcyFkiVILycKnsnlZp1csZ0="
              }
            },
            "StatusLambdaVersioneorfrf5xdHCmPhkrDUFVOjErpNaNQh8ZZkgvcc2I": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "StatusLambdaFunction"
                },
                "CodeSha256": "qw3p1DbmVwcRmTm49iEuQcyFkiVILycKnsnlZp1csZ0="
              }
            },
            "WorkerLambdaVersionJMRQFesnW7R01FH3Ii8h9NEmeBdkuBIjvM0dvZ7U": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "WorkerLambdaFunction"
                },
                "CodeSha256": "qw3p1DbmVwcRmTm49iEuQcyFkiVILycKnsnlZp1csZ0="
              }
            },
            "ApiGatewayRestApi": {
              "Type": "AWS::ApiGateway::RestApi",
              "Properties": {
                "Name": "dev-green-screen-remover",
                "EndpointConfiguration": {
                  "Types": [
                    "EDGE"
                  ]
                },
                "Policy": ""
              }
            },
            "ApiGatewayResourceSubmit": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Fn::GetAtt": [
                    "ApiGatewayRestApi",
                    "RootResourceId"
                  ]
                },
                "PathPart": "submit",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayResourceStatus": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Fn::GetAtt": [
                    "ApiGatewayRestApi",
                    "RootResourceId"
                  ]
                },
                "PathPart": "status",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayResourceStatusJobidVar": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Ref": "ApiGatewayResourceStatus"
                },
                "PathPart": "{jobId}",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayMethodSubmitPost": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "POST",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceSubmit"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "SubmitLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "SubmitLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodStatusJobidVarGet": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "GET",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceStatusJobidVar"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "StatusLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "StatusLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayDeployment1749110418012": {
              "Type": "AWS::ApiGateway::Deployment",
              "Properties": {
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "StageName": "dev"
              },
              "DependsOn": [
                "ApiGatewayMethodSubmitPost",
                "ApiGatewayMethodStatusJobidVarGet"
              ]
            },
            "SubmitLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "SubmitLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "StatusLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "StatusLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "WorkerEventSourceMappingSQSJobQueue": {
              "Type": "AWS::Lambda::EventSourceMapping",
              "DependsOn": [
                "IamRoleLambdaExecution"
              ],
              "Properties": {
                "BatchSize": 10,
                "EventSourceArn": {
                  "Fn::GetAtt": [
                    "JobQueue",
                    "Arn"
                  ]
                },
                "FunctionName": {
                  "Fn::GetAtt": [
                    "WorkerLambdaFunction",
                    "Arn"
                  ]
                },
                "Enabled": true
              }
            },
            "JobQueue": {
              "Type": "AWS::SQS::Queue",
              "Properties": {
                "QueueName": "GreenScreenJobQueue",
                "VisibilityTimeout": 65
              }
            },
            "JobsTable": {
              "Type": "AWS::DynamoDB::Table",
              "Properties": {
                "TableName": "green-screen-jobs",
                "BillingMode": "PAY_PER_REQUEST",
                "AttributeDefinitions": [
                  {
                    "AttributeName": "jobId",
                    "AttributeType": "S"
                  }
                ],
                "KeySchema": [
                  {
                    "AttributeName": "jobId",
                    "KeyType": "HASH"
                  }
                ]
              }
            }
          },
          "Outputs": {
            "ServerlessDeploymentBucketName": {
              "Value": "serverless-framework-deployments-us-east-1-abe88c38-3b47",
              "Export": {
                "Name": "sls-green-screen-remover-dev-ServerlessDeploymentBucketName"
              }
            },
            "SubmitLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "SubmitLambdaVersionajcJUsmmO7Yd3Orn9ckeOYB0lYkRysGhUXPLLI"
              },
              "Export": {
                "Name": "sls-green-screen-remover-dev-SubmitLambdaFunctionQualifiedArn"
              }
            },
            "StatusLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "StatusLambdaVersioneorfrf5xdHCmPhkrDUFVOjErpNaNQh8ZZkgvcc2I"
              },
              "Export": {
                "Name": "sls-green-screen-remover-dev-StatusLambdaFunctionQualifiedArn"
              }
            },
            "WorkerLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "WorkerLambdaVersionJMRQFesnW7R01FH3Ii8h9NEmeBdkuBIjvM0dvZ7U"
              },
              "Export": {
                "Name": "sls-green-screen-remover-dev-WorkerLambdaFunctionQualifiedArn"
              }
            },
            "ServiceEndpoint": {
              "Description": "URL of the service endpoint",
              "Value": {
                "Fn::Join": [
                  "",
                  [
                    "https://",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    ".execute-api.",
                    {
                      "Ref": "AWS::Region"
                    },
                    ".",
                    {
                      "Ref": "AWS::URLSuffix"
                    },
                    "/dev"
                  ]
                ]
              },
              "Export": {
                "Name": "sls-green-screen-remover-dev-ServiceEndpoint"
              }
            }
          }
        },
        "vpc": {}
      },
      "functions": {
        "submit": {
          "handler": "src/submit.handler",
          "timeout": 29,
          "events": [
            {
              "http": {
                "path": "submit",
                "method": "post",
                "integration": "AWS_PROXY"
              }
            }
          ],
          "environment": {
            "JOBS_TABLE": "green-screen-jobs",
            "JOB_QUEUE_URL": {
              "Ref": "JobQueue"
            },
            "NODE_OPTIONS": "--enable-source-maps"
          },
          "name": "green-screen-remover-dev-submit",
          "package": {},
          "memory": 3008,
          "runtime": "nodejs20.x",
          "vpc": {},
          "versionLogicalId": "SubmitLambdaVersionajcJUsmmO7Yd3Orn9ckeOYB0lYkRysGhUXPLLI"
        },
        "status": {
          "handler": "src/status.handler",
          "timeout": 29,
          "events": [
            {
              "http": {
                "path": "status/{jobId}",
                "method": "get",
                "integration": "AWS_PROXY"
              }
            }
          ],
          "environment": {
            "JOBS_TABLE": "green-screen-jobs",
            "NODE_OPTIONS": "--enable-source-maps"
          },
          "name": "green-screen-remover-dev-status",
          "package": {},
          "memory": 3008,
          "runtime": "nodejs20.x",
          "vpc": {},
          "versionLogicalId": "StatusLambdaVersioneorfrf5xdHCmPhkrDUFVOjErpNaNQh8ZZkgvcc2I"
        },
        "worker": {
          "handler": "src/worker.handler",
          "timeout": 900,
          "layers": [
            "arn:aws:lambda:us-east-1:339712823540:layer:ffmpeg:1"
          ],
          "events": [
            {
              "sqs": {
                "arn": {
                  "Fn::GetAtt": [
                    "JobQueue",
                    "Arn"
                  ]
                }
              }
            }
          ],
          "environment": {
            "OUTPUT_BUCKET": "your-video-engine-uploads",
            "JOBS_TABLE": "green-screen-jobs",
            "NODE_OPTIONS": "--enable-source-maps"
          },
          "name": "green-screen-remover-dev-worker",
          "package": {},
          "memory": 3008,
          "runtime": "nodejs20.x",
          "vpc": {},
          "versionLogicalId": "WorkerLambdaVersionJMRQFesnW7R01FH3Ii8h9NEmeBdkuBIjvM0dvZ7U"
        }
      },
      "resources": {
        "Resources": {
          "JobQueue": {
            "Type": "AWS::SQS::Queue",
            "Properties": {
              "QueueName": "GreenScreenJobQueue",
              "VisibilityTimeout": 65
            }
          },
          "JobsTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "green-screen-jobs",
              "BillingMode": "PAY_PER_REQUEST",
              "AttributeDefinitions": [
                {
                  "AttributeName": "jobId",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "jobId",
                  "KeyType": "HASH"
                }
              ]
            }
          }
        },
        "Outputs": {}
      }
    },
    "provider": {
      "name": "aws",
      "runtime": "nodejs20.x",
      "region": "us-east-1",
      "memorySize": 3008,
      "timeout": 900,
      "environment": {
        "OUTPUT_BUCKET": "your-video-engine-uploads",
        "JOBS_TABLE": "green-screen-jobs",
        "JOB_QUEUE_URL": {
          "Ref": "JobQueue"
        }
      },
      "iamRoleStatements": [
        {
          "Effect": "Allow",
          "Action": [
            "dynamodb:*"
          ],
          "Resource": "arn:aws:dynamodb:us-east-1:*:table/green-screen-jobs"
        },
        {
          "Effect": "Allow",
          "Action": [
            "s3:*"
          ],
          "Resource": "arn:aws:s3:::your-video-engine-uploads/*"
        },
        {
          "Effect": "Allow",
          "Action": [
            "sqs:*"
          ],
          "Resource": "*"
        },
        {
          "Effect": "Allow",
          "Action": [
            "ssm:GetParameter"
          ],
          "Resource": "*"
        }
      ],
      "stage": "dev",
      "versionFunctions": true,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "SubmitLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/green-screen-remover-dev-submit"
            }
          },
          "StatusLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/green-screen-remover-dev-status"
            }
          },
          "WorkerLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/green-screen-remover-dev-worker"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "green-screen-remover",
                        "dev",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup",
                          "logs:TagResource"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/green-screen-remover-dev*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/green-screen-remover-dev*:*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "dynamodb:*"
                        ],
                        "Resource": "arn:aws:dynamodb:us-east-1:*:table/green-screen-jobs"
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "s3:*"
                        ],
                        "Resource": "arn:aws:s3:::your-video-engine-uploads/*"
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "sqs:*"
                        ],
                        "Resource": "*"
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "ssm:GetParameter"
                        ],
                        "Resource": "*"
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "sqs:ReceiveMessage",
                          "sqs:DeleteMessage",
                          "sqs:GetQueueAttributes"
                        ],
                        "Resource": [
                          {
                            "Fn::GetAtt": [
                              "JobQueue",
                              "Arn"
                            ]
                          }
                        ]
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "green-screen-remover",
                    "dev",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "SubmitLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-east-1-abe88c38-3b47",
                "S3Key": "serverless/green-screen-remover/dev/1749110425255-2025-06-05T08:00:25.255Z/green-screen-remover.zip"
              },
              "Handler": "src/submit.handler",
              "Runtime": "nodejs20.x",
              "FunctionName": "green-screen-remover-dev-submit",
              "MemorySize": 3008,
              "Timeout": 29,
              "Environment": {
                "Variables": {
                  "OUTPUT_BUCKET": "your-video-engine-uploads",
                  "JOBS_TABLE": "green-screen-jobs",
                  "JOB_QUEUE_URL": {
                    "Ref": "JobQueue"
                  },
                  "NODE_OPTIONS": "--enable-source-maps"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "SubmitLogGroup"
            ]
          },
          "StatusLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-east-1-abe88c38-3b47",
                "S3Key": "serverless/green-screen-remover/dev/1749110425255-2025-06-05T08:00:25.255Z/green-screen-remover.zip"
              },
              "Handler": "src/status.handler",
              "Runtime": "nodejs20.x",
              "FunctionName": "green-screen-remover-dev-status",
              "MemorySize": 3008,
              "Timeout": 29,
              "Environment": {
                "Variables": {
                  "OUTPUT_BUCKET": "your-video-engine-uploads",
                  "JOBS_TABLE": "green-screen-jobs",
                  "JOB_QUEUE_URL": {
                    "Ref": "JobQueue"
                  },
                  "NODE_OPTIONS": "--enable-source-maps"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "StatusLogGroup"
            ]
          },
          "WorkerLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-east-1-abe88c38-3b47",
                "S3Key": "serverless/green-screen-remover/dev/1749110425255-2025-06-05T08:00:25.255Z/green-screen-remover.zip"
              },
              "Handler": "src/worker.handler",
              "Runtime": "nodejs20.x",
              "FunctionName": "green-screen-remover-dev-worker",
              "MemorySize": 3008,
              "Timeout": 900,
              "Environment": {
                "Variables": {
                  "OUTPUT_BUCKET": "your-video-engine-uploads",
                  "JOBS_TABLE": "green-screen-jobs",
                  "JOB_QUEUE_URL": {
                    "Ref": "JobQueue"
                  },
                  "NODE_OPTIONS": "--enable-source-maps"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Layers": [
                "arn:aws:lambda:us-east-1:339712823540:layer:ffmpeg:1"
              ]
            },
            "DependsOn": [
              "WorkerLogGroup"
            ]
          },
          "SubmitLambdaVersionajcJUsmmO7Yd3Orn9ckeOYB0lYkRysGhUXPLLI": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "SubmitLambdaFunction"
              },
              "CodeSha256": "qw3p1DbmVwcRmTm49iEuQcyFkiVILycKnsnlZp1csZ0="
            }
          },
          "StatusLambdaVersioneorfrf5xdHCmPhkrDUFVOjErpNaNQh8ZZkgvcc2I": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "StatusLambdaFunction"
              },
              "CodeSha256": "qw3p1DbmVwcRmTm49iEuQcyFkiVILycKnsnlZp1csZ0="
            }
          },
          "WorkerLambdaVersionJMRQFesnW7R01FH3Ii8h9NEmeBdkuBIjvM0dvZ7U": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "WorkerLambdaFunction"
              },
              "CodeSha256": "qw3p1DbmVwcRmTm49iEuQcyFkiVILycKnsnlZp1csZ0="
            }
          },
          "ApiGatewayRestApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
              "Name": "dev-green-screen-remover",
              "EndpointConfiguration": {
                "Types": [
                  "EDGE"
                ]
              },
              "Policy": ""
            }
          },
          "ApiGatewayResourceSubmit": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "submit",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceStatus": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "status",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceStatusJobidVar": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceStatus"
              },
              "PathPart": "{jobId}",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodSubmitPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceSubmit"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": "<REDACTED>",
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "SubmitLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "SubmitLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodStatusJobidVarGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceStatusJobidVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": "<REDACTED>",
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "StatusLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "StatusLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayDeployment1749110418012": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "StageName": "dev"
            },
            "DependsOn": [
              "ApiGatewayMethodSubmitPost",
              "ApiGatewayMethodStatusJobidVarGet"
            ]
          },
          "SubmitLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "SubmitLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "StatusLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "StatusLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "WorkerEventSourceMappingSQSJobQueue": {
            "Type": "AWS::Lambda::EventSourceMapping",
            "DependsOn": [
              "IamRoleLambdaExecution"
            ],
            "Properties": {
              "BatchSize": 10,
              "EventSourceArn": {
                "Fn::GetAtt": [
                  "JobQueue",
                  "Arn"
                ]
              },
              "FunctionName": {
                "Fn::GetAtt": [
                  "WorkerLambdaFunction",
                  "Arn"
                ]
              },
              "Enabled": true
            }
          },
          "JobQueue": {
            "Type": "AWS::SQS::Queue",
            "Properties": {
              "QueueName": "GreenScreenJobQueue",
              "VisibilityTimeout": 65
            }
          },
          "JobsTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "green-screen-jobs",
              "BillingMode": "PAY_PER_REQUEST",
              "AttributeDefinitions": [
                {
                  "AttributeName": "jobId",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "jobId",
                  "KeyType": "HASH"
                }
              ]
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": "serverless-framework-deployments-us-east-1-abe88c38-3b47",
            "Export": {
              "Name": "sls-green-screen-remover-dev-ServerlessDeploymentBucketName"
            }
          },
          "SubmitLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "SubmitLambdaVersionajcJUsmmO7Yd3Orn9ckeOYB0lYkRysGhUXPLLI"
            },
            "Export": {
              "Name": "sls-green-screen-remover-dev-SubmitLambdaFunctionQualifiedArn"
            }
          },
          "StatusLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "StatusLambdaVersioneorfrf5xdHCmPhkrDUFVOjErpNaNQh8ZZkgvcc2I"
            },
            "Export": {
              "Name": "sls-green-screen-remover-dev-StatusLambdaFunctionQualifiedArn"
            }
          },
          "WorkerLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "WorkerLambdaVersionJMRQFesnW7R01FH3Ii8h9NEmeBdkuBIjvM0dvZ7U"
            },
            "Export": {
              "Name": "sls-green-screen-remover-dev-WorkerLambdaFunctionQualifiedArn"
            }
          },
          "ServiceEndpoint": {
            "Description": "URL of the service endpoint",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  },
                  "/dev"
                ]
              ]
            },
            "Export": {
              "Name": "sls-green-screen-remover-dev-ServiceEndpoint"
            }
          }
        }
      },
      "vpc": {}
    },
    "dashboard": {
      "isEnabledForService": false,
      "requiredAuthentication": false,
      "orgFeaturesInUse": null,
      "orgObservabilityIntegrations": null,
      "serviceAppId": null,
      "serviceProvider": null,
      "instanceParameters": null
    },
    "serviceRawFile": "service: green-screen-remover\n\nprovider:\n  name: aws\n  runtime: nodejs20.x\n  region: us-east-1\n  memorySize: 3008\n  timeout: 900\n  environment:\n    OUTPUT_BUCKET: your-video-engine-uploads\n    JOBS_TABLE: green-screen-jobs\n    JOB_QUEUE_URL:\n      Ref: JobQueue\n  iamRoleStatements:\n    - Effect: Allow\n      Action:\n        - dynamodb:*\n      Resource: arn:aws:dynamodb:${self:provider.region}:*:table/green-screen-jobs\n    - Effect: Allow\n      Action:\n        - s3:*\n      Resource: arn:aws:s3:::your-video-engine-uploads/*\n    - Effect: Allow\n      Action:\n        - sqs:*\n      Resource: \"*\"\n    - Effect: Allow\n      Action:\n        - ssm:GetParameter\n      Resource: \"*\"\n\nfunctions:\n  submit:\n    handler: src/submit.handler\n    timeout: 29\n    events:\n      - http:\n          path: submit\n          method: post\n    environment:\n      JOBS_TABLE: ${self:provider.environment.JOBS_TABLE}\n      JOB_QUEUE_URL: { Ref: JobQueue }\n\n  status:\n    handler: src/status.handler\n    timeout: 29\n    events:\n      - http:\n          path: status/{jobId}\n          method: get\n    environment:\n      JOBS_TABLE: ${self:provider.environment.JOBS_TABLE}\n\n  worker:\n    handler: src/worker.handler\n    timeout: 900\n    layers:\n      - arn:aws:lambda:us-east-1:339712823540:layer:ffmpeg:1\n    events:\n      - sqs:\n          arn:\n            Fn::GetAtt:\n              - JobQueue\n              - Arn\n    environment:\n      OUTPUT_BUCKET: ${self:provider.environment.OUTPUT_BUCKET}\n      JOBS_TABLE: ${self:provider.environment.JOBS_TABLE}\n\nresources:\n  Resources:\n    JobQueue:\n      Type: AWS::SQS::Queue\n      Properties:\n        QueueName: GreenScreenJobQueue\n        VisibilityTimeout: 65\n\n    JobsTable:\n      Type: AWS::DynamoDB::Table\n      Properties:\n        TableName: green-screen-jobs\n        BillingMode: PAY_PER_REQUEST\n        AttributeDefinitions:\n          - AttributeName: jobId\n            AttributeType: S\n        KeySchema:\n          - AttributeName: jobId\n            KeyType: HASH\n",
    "command": [
      "deploy"
    ],
    "options": {},
    "orgId": "965cc0cb-affc-4adf-87ca-29c31431d746",
    "orgName": "aiatelier",
    "userId": "DsH4S4CQqlVdc84JD7",
    "userName": "aiatelier",
    "serviceProviderAwsAccountId": "339712823540",
    "serviceProviderAwsCfStackName": "green-screen-remover-dev",
    "serviceProviderAwsCfStackId": "arn:aws:cloudformation:us-east-1:339712823540:stack/green-screen-remover-dev/da2fe210-3f9a-11f0-9d20-122510776523",
    "serviceProviderAwsCfStackCreated": "2025-06-02T10:17:56.780Z",
    "serviceProviderAwsCfStackUpdated": "2025-06-04T12:55:31.488Z",
    "serviceProviderAwsCfStackStatus": "UPDATE_COMPLETE",
    "serviceProviderAwsCfStackOutputs": [
      {
        "OutputKey": "StatusLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:339712823540:function:green-screen-remover-dev-status:33",
        "Description": "Current Lambda function version",
        "ExportName": "sls-green-screen-remover-dev-StatusLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "WorkerLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:339712823540:function:green-screen-remover-dev-worker:33",
        "Description": "Current Lambda function version",
        "ExportName": "sls-green-screen-remover-dev-WorkerLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "SubmitLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:339712823540:function:green-screen-remover-dev-submit:33",
        "Description": "Current Lambda function version",
        "ExportName": "sls-green-screen-remover-dev-SubmitLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "ServiceEndpoint",
        "OutputValue": "https://nazsdz25z5.execute-api.us-east-1.amazonaws.com/dev",
        "Description": "URL of the service endpoint",
        "ExportName": "sls-green-screen-remover-dev-ServiceEndpoint"
      },
      {
        "OutputKey": "ServerlessDeploymentBucketName",
        "OutputValue": "serverless-framework-deployments-us-east-1-abe88c38-3b47",
        "ExportName": "sls-green-screen-remover-dev-ServerlessDeploymentBucketName"
      }
    ],
    "compiledCloudFormationTemplate": {
      "AWSTemplateFormatVersion": "2010-09-09",
      "Description": "The AWS CloudFormation template for this Serverless application",
      "Resources": {
        "SubmitLogGroup": {
          "Type": "AWS::Logs::LogGroup",
          "Properties": {
            "LogGroupName": "/aws/lambda/green-screen-remover-dev-submit"
          }
        },
        "StatusLogGroup": {
          "Type": "AWS::Logs::LogGroup",
          "Properties": {
            "LogGroupName": "/aws/lambda/green-screen-remover-dev-status"
          }
        },
        "WorkerLogGroup": {
          "Type": "AWS::Logs::LogGroup",
          "Properties": {
            "LogGroupName": "/aws/lambda/green-screen-remover-dev-worker"
          }
        },
        "IamRoleLambdaExecution": {
          "Type": "AWS::IAM::Role",
          "Properties": {
            "AssumeRolePolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Principal": {
                    "Service": [
                      "lambda.amazonaws.com"
                    ]
                  },
                  "Action": [
                    "sts:AssumeRole"
                  ]
                }
              ]
            },
            "Policies": [
              {
                "PolicyName": {
                  "Fn::Join": [
                    "-",
                    [
                      "green-screen-remover",
                      "dev",
                      "lambda"
                    ]
                  ]
                },
                "PolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Action": [
                        "logs:CreateLogStream",
                        "logs:CreateLogGroup",
                        "logs:TagResource"
                      ],
                      "Resource": [
                        {
                          "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/green-screen-remover-dev*:*"
                        }
                      ]
                    },
                    {
                      "Effect": "Allow",
                      "Action": [
                        "logs:PutLogEvents"
                      ],
                      "Resource": [
                        {
                          "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/green-screen-remover-dev*:*:*"
                        }
                      ]
                    },
                    {
                      "Effect": "Allow",
                      "Action": [
                        "dynamodb:*"
                      ],
                      "Resource": "arn:aws:dynamodb:us-east-1:*:table/green-screen-jobs"
                    },
                    {
                      "Effect": "Allow",
                      "Action": [
                        "s3:*"
                      ],
                      "Resource": "arn:aws:s3:::your-video-engine-uploads/*"
                    },
                    {
                      "Effect": "Allow",
                      "Action": [
                        "sqs:*"
                      ],
                      "Resource": "*"
                    },
                    {
                      "Effect": "Allow",
                      "Action": [
                        "ssm:GetParameter"
                      ],
                      "Resource": "*"
                    },
                    {
                      "Effect": "Allow",
                      "Action": [
                        "sqs:ReceiveMessage",
                        "sqs:DeleteMessage",
                        "sqs:GetQueueAttributes"
                      ],
                      "Resource": [
                        {
                          "Fn::GetAtt": [
                            "JobQueue",
                            "Arn"
                          ]
                        }
                      ]
                    }
                  ]
                }
              }
            ],
            "Path": "/",
            "RoleName": {
              "Fn::Join": [
                "-",
                [
                  "green-screen-remover",
                  "dev",
                  {
                    "Ref": "AWS::Region"
                  },
                  "lambdaRole"
                ]
              ]
            }
          }
        },
        "SubmitLambdaFunction": {
          "Type": "AWS::Lambda::Function",
          "Properties": {
            "Code": {
              "S3Bucket": "serverless-framework-deployments-us-east-1-abe88c38-3b47",
              "S3Key": "serverless/green-screen-remover/dev/1749110425255-2025-06-05T08:00:25.255Z/green-screen-remover.zip"
            },
            "Handler": "src/submit.handler",
            "Runtime": "nodejs20.x",
            "FunctionName": "green-screen-remover-dev-submit",
            "MemorySize": 3008,
            "Timeout": 29,
            "Environment": {
              "Variables": {
                "OUTPUT_BUCKET": "your-video-engine-uploads",
                "JOBS_TABLE": "green-screen-jobs",
                "JOB_QUEUE_URL": {
                  "Ref": "JobQueue"
                },
                "NODE_OPTIONS": "--enable-source-maps"
              }
            },
            "Role": {
              "Fn::GetAtt": [
                "IamRoleLambdaExecution",
                "Arn"
              ]
            }
          },
          "DependsOn": [
            "SubmitLogGroup"
          ]
        },
        "StatusLambdaFunction": {
          "Type": "AWS::Lambda::Function",
          "Properties": {
            "Code": {
              "S3Bucket": "serverless-framework-deployments-us-east-1-abe88c38-3b47",
              "S3Key": "serverless/green-screen-remover/dev/1749110425255-2025-06-05T08:00:25.255Z/green-screen-remover.zip"
            },
            "Handler": "src/status.handler",
            "Runtime": "nodejs20.x",
            "FunctionName": "green-screen-remover-dev-status",
            "MemorySize": 3008,
            "Timeout": 29,
            "Environment": {
              "Variables": {
                "OUTPUT_BUCKET": "your-video-engine-uploads",
                "JOBS_TABLE": "green-screen-jobs",
                "JOB_QUEUE_URL": {
                  "Ref": "JobQueue"
                },
                "NODE_OPTIONS": "--enable-source-maps"
              }
            },
            "Role": {
              "Fn::GetAtt": [
                "IamRoleLambdaExecution",
                "Arn"
              ]
            }
          },
          "DependsOn": [
            "StatusLogGroup"
          ]
        },
        "WorkerLambdaFunction": {
          "Type": "AWS::Lambda::Function",
          "Properties": {
            "Code": {
              "S3Bucket": "serverless-framework-deployments-us-east-1-abe88c38-3b47",
              "S3Key": "serverless/green-screen-remover/dev/1749110425255-2025-06-05T08:00:25.255Z/green-screen-remover.zip"
            },
            "Handler": "src/worker.handler",
            "Runtime": "nodejs20.x",
            "FunctionName": "green-screen-remover-dev-worker",
            "MemorySize": 3008,
            "Timeout": 900,
            "Environment": {
              "Variables": {
                "OUTPUT_BUCKET": "your-video-engine-uploads",
                "JOBS_TABLE": "green-screen-jobs",
                "JOB_QUEUE_URL": {
                  "Ref": "JobQueue"
                },
                "NODE_OPTIONS": "--enable-source-maps"
              }
            },
            "Role": {
              "Fn::GetAtt": [
                "IamRoleLambdaExecution",
                "Arn"
              ]
            },
            "Layers": [
              "arn:aws:lambda:us-east-1:339712823540:layer:ffmpeg:1"
            ]
          },
          "DependsOn": [
            "WorkerLogGroup"
          ]
        },
        "SubmitLambdaVersionajcJUsmmO7Yd3Orn9ckeOYB0lYkRysGhUXPLLI": {
          "Type": "AWS::Lambda::Version",
          "DeletionPolicy": "Retain",
          "Properties": {
            "FunctionName": {
              "Ref": "SubmitLambdaFunction"
            },
            "CodeSha256": "qw3p1DbmVwcRmTm49iEuQcyFkiVILycKnsnlZp1csZ0="
          }
        },
        "StatusLambdaVersioneorfrf5xdHCmPhkrDUFVOjErpNaNQh8ZZkgvcc2I": {
          "Type": "AWS::Lambda::Version",
          "DeletionPolicy": "Retain",
          "Properties": {
            "FunctionName": {
              "Ref": "StatusLambdaFunction"
            },
            "CodeSha256": "qw3p1DbmVwcRmTm49iEuQcyFkiVILycKnsnlZp1csZ0="
          }
        },
        "WorkerLambdaVersionJMRQFesnW7R01FH3Ii8h9NEmeBdkuBIjvM0dvZ7U": {
          "Type": "AWS::Lambda::Version",
          "DeletionPolicy": "Retain",
          "Properties": {
            "FunctionName": {
              "Ref": "WorkerLambdaFunction"
            },
            "CodeSha256": "qw3p1DbmVwcRmTm49iEuQcyFkiVILycKnsnlZp1csZ0="
          }
        },
        "ApiGatewayRestApi": {
          "Type": "AWS::ApiGateway::RestApi",
          "Properties": {
            "Name": "dev-green-screen-remover",
            "EndpointConfiguration": {
              "Types": [
                "EDGE"
              ]
            },
            "Policy": ""
          }
        },
        "ApiGatewayResourceSubmit": {
          "Type": "AWS::ApiGateway::Resource",
          "Properties": {
            "ParentId": {
              "Fn::GetAtt": [
                "ApiGatewayRestApi",
                "RootResourceId"
              ]
            },
            "PathPart": "submit",
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            }
          }
        },
        "ApiGatewayResourceStatus": {
          "Type": "AWS::ApiGateway::Resource",
          "Properties": {
            "ParentId": {
              "Fn::GetAtt": [
                "ApiGatewayRestApi",
                "RootResourceId"
              ]
            },
            "PathPart": "status",
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            }
          }
        },
        "ApiGatewayResourceStatusJobidVar": {
          "Type": "AWS::ApiGateway::Resource",
          "Properties": {
            "ParentId": {
              "Ref": "ApiGatewayResourceStatus"
            },
            "PathPart": "{jobId}",
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            }
          }
        },
        "ApiGatewayMethodSubmitPost": {
          "Type": "AWS::ApiGateway::Method",
          "Properties": {
            "HttpMethod": "POST",
            "RequestParameters": {},
            "ResourceId": {
              "Ref": "ApiGatewayResourceSubmit"
            },
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            },
            "ApiKeyRequired": "<REDACTED>",
            "AuthorizationType": "NONE",
            "Integration": {
              "IntegrationHttpMethod": "POST",
              "Type": "AWS_PROXY",
              "Uri": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":apigateway:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":lambda:path/2015-03-31/functions/",
                    {
                      "Fn::GetAtt": [
                        "SubmitLambdaFunction",
                        "Arn"
                      ]
                    },
                    "/invocations"
                  ]
                ]
              }
            },
            "MethodResponses": []
          },
          "DependsOn": [
            "SubmitLambdaPermissionApiGateway"
          ]
        },
        "ApiGatewayMethodStatusJobidVarGet": {
          "Type": "AWS::ApiGateway::Method",
          "Properties": {
            "HttpMethod": "GET",
            "RequestParameters": {},
            "ResourceId": {
              "Ref": "ApiGatewayResourceStatusJobidVar"
            },
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            },
            "ApiKeyRequired": "<REDACTED>",
            "AuthorizationType": "NONE",
            "Integration": {
              "IntegrationHttpMethod": "POST",
              "Type": "AWS_PROXY",
              "Uri": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":apigateway:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":lambda:path/2015-03-31/functions/",
                    {
                      "Fn::GetAtt": [
                        "StatusLambdaFunction",
                        "Arn"
                      ]
                    },
                    "/invocations"
                  ]
                ]
              }
            },
            "MethodResponses": []
          },
          "DependsOn": [
            "StatusLambdaPermissionApiGateway"
          ]
        },
        "ApiGatewayDeployment1749110418012": {
          "Type": "AWS::ApiGateway::Deployment",
          "Properties": {
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            },
            "StageName": "dev"
          },
          "DependsOn": [
            "ApiGatewayMethodSubmitPost",
            "ApiGatewayMethodStatusJobidVarGet"
          ]
        },
        "SubmitLambdaPermissionApiGateway": {
          "Type": "AWS::Lambda::Permission",
          "Properties": {
            "FunctionName": {
              "Fn::GetAtt": [
                "SubmitLambdaFunction",
                "Arn"
              ]
            },
            "Action": "lambda:InvokeFunction",
            "Principal": "apigateway.amazonaws.com",
            "SourceArn": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":execute-api:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":",
                  {
                    "Ref": "AWS::AccountId"
                  },
                  ":",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  "/*/*"
                ]
              ]
            }
          }
        },
        "StatusLambdaPermissionApiGateway": {
          "Type": "AWS::Lambda::Permission",
          "Properties": {
            "FunctionName": {
              "Fn::GetAtt": [
                "StatusLambdaFunction",
                "Arn"
              ]
            },
            "Action": "lambda:InvokeFunction",
            "Principal": "apigateway.amazonaws.com",
            "SourceArn": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":execute-api:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":",
                  {
                    "Ref": "AWS::AccountId"
                  },
                  ":",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  "/*/*"
                ]
              ]
            }
          }
        },
        "WorkerEventSourceMappingSQSJobQueue": {
          "Type": "AWS::Lambda::EventSourceMapping",
          "DependsOn": [
            "IamRoleLambdaExecution"
          ],
          "Properties": {
            "BatchSize": 10,
            "EventSourceArn": {
              "Fn::GetAtt": [
                "JobQueue",
                "Arn"
              ]
            },
            "FunctionName": {
              "Fn::GetAtt": [
                "WorkerLambdaFunction",
                "Arn"
              ]
            },
            "Enabled": true
          }
        },
        "JobQueue": {
          "Type": "AWS::SQS::Queue",
          "Properties": {
            "QueueName": "GreenScreenJobQueue",
            "VisibilityTimeout": 65
          }
        },
        "JobsTable": {
          "Type": "AWS::DynamoDB::Table",
          "Properties": {
            "TableName": "green-screen-jobs",
            "BillingMode": "PAY_PER_REQUEST",
            "AttributeDefinitions": [
              {
                "AttributeName": "jobId",
                "AttributeType": "S"
              }
            ],
            "KeySchema": [
              {
                "AttributeName": "jobId",
                "KeyType": "HASH"
              }
            ]
          }
        }
      },
      "Outputs": {
        "ServerlessDeploymentBucketName": {
          "Value": "serverless-framework-deployments-us-east-1-abe88c38-3b47",
          "Export": {
            "Name": "sls-green-screen-remover-dev-ServerlessDeploymentBucketName"
          }
        },
        "SubmitLambdaFunctionQualifiedArn": {
          "Description": "Current Lambda function version",
          "Value": {
            "Ref": "SubmitLambdaVersionajcJUsmmO7Yd3Orn9ckeOYB0lYkRysGhUXPLLI"
          },
          "Export": {
            "Name": "sls-green-screen-remover-dev-SubmitLambdaFunctionQualifiedArn"
          }
        },
        "StatusLambdaFunctionQualifiedArn": {
          "Description": "Current Lambda function version",
          "Value": {
            "Ref": "StatusLambdaVersioneorfrf5xdHCmPhkrDUFVOjErpNaNQh8ZZkgvcc2I"
          },
          "Export": {
            "Name": "sls-green-screen-remover-dev-StatusLambdaFunctionQualifiedArn"
          }
        },
        "WorkerLambdaFunctionQualifiedArn": {
          "Description": "Current Lambda function version",
          "Value": {
            "Ref": "WorkerLambdaVersionJMRQFesnW7R01FH3Ii8h9NEmeBdkuBIjvM0dvZ7U"
          },
          "Export": {
            "Name": "sls-green-screen-remover-dev-WorkerLambdaFunctionQualifiedArn"
          }
        },
        "ServiceEndpoint": {
          "Description": "URL of the service endpoint",
          "Value": {
            "Fn::Join": [
              "",
              [
                "https://",
                {
                  "Ref": "ApiGatewayRestApi"
                },
                ".execute-api.",
                {
                  "Ref": "AWS::Region"
                },
                ".",
                {
                  "Ref": "AWS::URLSuffix"
                },
                "/dev"
              ]
            ]
          },
          "Export": {
            "Name": "sls-green-screen-remover-dev-ServiceEndpoint"
          }
        }
      }
    }
  }
}