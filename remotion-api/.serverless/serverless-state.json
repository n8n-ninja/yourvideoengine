{
  "service": {
    "service": "remotion-api",
    "serviceObject": {
      "name": "remotion-api"
    },
    "provider": {
      "name": "aws",
      "runtime": "nodejs18.x",
      "region": "us-east-1",
      "timeout": 29,
      "deploymentBucket": "manu-remotion-deployments",
      "environment": {
        "REMOTION_ENV": "prod"
      },
      "iam": {
        "role": {
          "statements": [
            {
              "Effect": "Allow",
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
                "logs:TagResource",
                "lambda:InvokeFunction",
                "lambda:GetFunction",
                "s3:*",
                "ssm:*"
              ],
              "Resource": "*"
            }
          ]
        }
      },
      "stage": "dev",
      "versionFunctions": true,
      "deploymentBucketObject": {
        "name": "manu-remotion-deployments"
      },
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "RenderVideoLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/remotion-api-prod-renderVideo"
            }
          },
          "GetStatusLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/remotion-api-prod-getStatus"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "remotion-api",
                        "prod",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup",
                          "logs:TagResource"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/remotion-api-prod*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/remotion-api-prod*:*:*"
                          }
                        ]
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iam\"][\"role\"][\"statements\"][0]"
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "remotion-api",
                    "prod",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "RenderVideoLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "manu-remotion-deployments",
                "S3Key": "serverless/remotion-api/prod/1748113503680-2025-05-24T19:05:03.680Z/remotion-api.zip"
              },
              "Handler": "handler.renderVideo",
              "Runtime": "nodejs18.x",
              "FunctionName": "remotion-api-prod-renderVideo",
              "MemorySize": 1024,
              "Timeout": 29,
              "Environment": {
                "Variables": {
                  "REMOTION_ENV": "prod"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "RenderVideoLogGroup"
            ]
          },
          "GetStatusLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "manu-remotion-deployments",
                "S3Key": "serverless/remotion-api/prod/1748113503680-2025-05-24T19:05:03.680Z/remotion-api.zip"
              },
              "Handler": "handler.getStatus",
              "Runtime": "nodejs18.x",
              "FunctionName": "remotion-api-prod-getStatus",
              "MemorySize": 1024,
              "Timeout": 29,
              "Environment": {
                "Variables": {
                  "REMOTION_ENV": "prod"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "GetStatusLogGroup"
            ]
          },
          "RenderVideoLambdaVersionlF3Oe5i6f6Ffwdw5yWAn7tIwe8Q4Pen2V7dNN7K8": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "RenderVideoLambdaFunction"
              },
              "CodeSha256": "6/kNYOZVnqmMUgKvh8QhWLmFp+UOPDquJm7Hx/GHreY="
            }
          },
          "GetStatusLambdaVersionAYvuX1qVNY38pyXKadJIkhMSomcSSMBUO8B1DLhQb4": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "GetStatusLambdaFunction"
              },
              "CodeSha256": "6/kNYOZVnqmMUgKvh8QhWLmFp+UOPDquJm7Hx/GHreY="
            }
          },
          "ApiGatewayRestApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
              "Name": "prod-remotion-api",
              "EndpointConfiguration": {
                "Types": [
                  "EDGE"
                ]
              },
              "Policy": ""
            }
          },
          "ApiGatewayResourceRender": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "render",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceStatus": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "status",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodRenderPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceRender"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "RenderVideoLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "RenderVideoLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodStatusGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {
                "method.request.querystring.renderId": true
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceStatus"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "GetStatusLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": [],
              "RequestValidatorId": {
                "Ref": "ApiGatewayRemotionapiRequestValidator"
              }
            },
            "DependsOn": [
              "GetStatusLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayRemotionapiRequestValidator": {
            "Type": "AWS::ApiGateway::RequestValidator",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ValidateRequestBody": true,
              "ValidateRequestParameters": true,
              "Name": "remotion-api-prod | Validate request body and querystring parameters"
            }
          },
          "ApiGatewayDeployment1748113493879": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "StageName": "prod"
            },
            "DependsOn": [
              "ApiGatewayMethodRenderPost",
              "ApiGatewayMethodStatusGet"
            ]
          },
          "RenderVideoLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "RenderVideoLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "GetStatusLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "GetStatusLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": "manu-remotion-deployments",
            "Export": {
              "Name": "sls-remotion-api-prod-ServerlessDeploymentBucketName"
            }
          },
          "RenderVideoLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "RenderVideoLambdaVersionlF3Oe5i6f6Ffwdw5yWAn7tIwe8Q4Pen2V7dNN7K8"
            },
            "Export": {
              "Name": "sls-remotion-api-prod-RenderVideoLambdaFunctionQualifiedArn"
            }
          },
          "GetStatusLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "GetStatusLambdaVersionAYvuX1qVNY38pyXKadJIkhMSomcSSMBUO8B1DLhQb4"
            },
            "Export": {
              "Name": "sls-remotion-api-prod-GetStatusLambdaFunctionQualifiedArn"
            }
          },
          "ServiceEndpoint": {
            "Description": "URL of the service endpoint",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  },
                  "/prod"
                ]
              ]
            },
            "Export": {
              "Name": "sls-remotion-api-prod-ServiceEndpoint"
            }
          }
        }
      },
      "vpc": {}
    },
    "custom": {
      "stages": [
        "dev",
        "prod"
      ]
    },
    "pluginsData": {},
    "functions": {
      "renderVideo": {
        "handler": "handler.renderVideo",
        "events": [
          {
            "http": {
              "path": "render",
              "method": "post",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "remotion-api-prod-renderVideo",
        "package": {},
        "memory": 1024,
        "timeout": 29,
        "runtime": "nodejs18.x",
        "vpc": {},
        "versionLogicalId": "RenderVideoLambdaVersionlF3Oe5i6f6Ffwdw5yWAn7tIwe8Q4Pen2V7dNN7K8"
      },
      "getStatus": {
        "handler": "handler.getStatus",
        "events": [
          {
            "http": {
              "path": "status",
              "method": "get",
              "request": {
                "parameters": {
                  "method.request.querystring.renderId": true
                }
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "remotion-api-prod-getStatus",
        "package": {},
        "memory": 1024,
        "timeout": 29,
        "runtime": "nodejs18.x",
        "vpc": {},
        "versionLogicalId": "GetStatusLambdaVersionAYvuX1qVNY38pyXKadJIkhMSomcSSMBUO8B1DLhQb4"
      }
    },
    "configValidationMode": "warn",
    "serviceFilename": "serverless.yml",
    "initialServerlessConfig": {
      "service": "remotion-api",
      "provider": {
        "$ref": "$[\"service\"][\"provider\"]"
      },
      "functions": {
        "$ref": "$[\"service\"][\"functions\"]"
      },
      "custom": {
        "$ref": "$[\"service\"][\"custom\"]"
      }
    },
    "layers": {},
    "isDashboardMonitoringPreconfigured": false,
    "artifact": "/Users/manu/work/02_yourvideoengine/remotion-api/.serverless/remotion-api.zip"
  },
  "package": {
    "artifactDirectoryName": "serverless/remotion-api/prod/1748113503680-2025-05-24T19:05:03.680Z",
    "artifact": "remotion-api.zip"
  }
}