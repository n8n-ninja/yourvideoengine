{
  "/Users/manu/work/02_yourvideoengine/remotion-api/serverless.yml": {
    "versionFramework": "4.14.4",
    "servicePath": "/Users/manu/work/02_yourvideoengine/remotion-api/serverless.yml",
    "serviceConfigFileName": "serverless.yml",
    "service": {
      "service": "remotion-api",
      "provider": {
        "name": "aws",
        "runtime": "nodejs18.x",
        "region": "us-east-1",
        "timeout": 29,
        "deploymentBucket": "manu-remotion-deployments",
        "environment": {
          "REMOTION_ENV": "dev"
        },
        "iam": {
          "role": {
            "statements": [
              {
                "Effect": "Allow",
                "Action": [
                  "logs:CreateLogGroup",
                  "logs:CreateLogStream",
                  "logs:PutLogEvents",
                  "logs:TagResource",
                  "lambda:InvokeFunction",
                  "lambda:GetFunction",
                  "s3:*",
                  "ssm:*"
                ],
                "Resource": "*"
              }
            ]
          }
        },
        "stage": "dev",
        "versionFunctions": true,
        "deploymentBucketObject": {
          "name": "manu-remotion-deployments"
        },
        "compiledCloudFormationTemplate": {
          "AWSTemplateFormatVersion": "2010-09-09",
          "Description": "The AWS CloudFormation template for this Serverless application",
          "Resources": {
            "RenderVideoLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/remotion-api-dev-renderVideo"
              }
            },
            "GetStatusLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/remotion-api-dev-getStatus"
              }
            },
            "IamRoleLambdaExecution": {
              "Type": "AWS::IAM::Role",
              "Properties": {
                "AssumeRolePolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Principal": {
                        "Service": [
                          "lambda.amazonaws.com"
                        ]
                      },
                      "Action": [
                        "sts:AssumeRole"
                      ]
                    }
                  ]
                },
                "Policies": [
                  {
                    "PolicyName": {
                      "Fn::Join": [
                        "-",
                        [
                          "remotion-api",
                          "dev",
                          "lambda"
                        ]
                      ]
                    },
                    "PolicyDocument": {
                      "Version": "2012-10-17",
                      "Statement": [
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:CreateLogStream",
                            "logs:CreateLogGroup",
                            "logs:TagResource"
                          ],
                          "Resource": [
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/remotion-api-dev*:*"
                            }
                          ]
                        },
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:PutLogEvents"
                          ],
                          "Resource": [
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/remotion-api-dev*:*:*"
                            }
                          ]
                        },
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:CreateLogGroup",
                            "logs:CreateLogStream",
                            "logs:PutLogEvents",
                            "logs:TagResource",
                            "lambda:InvokeFunction",
                            "lambda:GetFunction",
                            "s3:*",
                            "ssm:*"
                          ],
                          "Resource": "*"
                        }
                      ]
                    }
                  }
                ],
                "Path": "/",
                "RoleName": {
                  "Fn::Join": [
                    "-",
                    [
                      "remotion-api",
                      "dev",
                      {
                        "Ref": "AWS::Region"
                      },
                      "lambdaRole"
                    ]
                  ]
                }
              }
            },
            "RenderVideoLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "manu-remotion-deployments",
                  "S3Key": "serverless/remotion-api/dev/1748354823513-2025-05-27T14:07:03.513Z/remotion-api.zip"
                },
                "Handler": "handler.renderVideo",
                "Runtime": "nodejs18.x",
                "FunctionName": "remotion-api-dev-renderVideo",
                "MemorySize": 1024,
                "Timeout": 29,
                "Environment": {
                  "Variables": {
                    "REMOTION_ENV": "dev"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "RenderVideoLogGroup"
              ]
            },
            "GetStatusLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "manu-remotion-deployments",
                  "S3Key": "serverless/remotion-api/dev/1748354823513-2025-05-27T14:07:03.513Z/remotion-api.zip"
                },
                "Handler": "handler.getStatus",
                "Runtime": "nodejs18.x",
                "FunctionName": "remotion-api-dev-getStatus",
                "MemorySize": 1024,
                "Timeout": 29,
                "Environment": {
                  "Variables": {
                    "REMOTION_ENV": "dev"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "GetStatusLogGroup"
              ]
            },
            "RenderVideoLambdaVersionJMwhTgLUo9ZwY4PwvMkRMpGf8po2mXIzH1nYsKnaA0": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "RenderVideoLambdaFunction"
                },
                "CodeSha256": "pJzxip8t4MiFBI5S372LiaB3phn8F2NLpZCEo9zLL5Q="
              }
            },
            "GetStatusLambdaVersionXJbTdMPu5EOgS9n40ih9hwk6bThTll6uo8MpdLCEqzU": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "GetStatusLambdaFunction"
                },
                "CodeSha256": "pJzxip8t4MiFBI5S372LiaB3phn8F2NLpZCEo9zLL5Q="
              }
            },
            "ApiGatewayRestApi": {
              "Type": "AWS::ApiGateway::RestApi",
              "Properties": {
                "Name": "dev-remotion-api",
                "EndpointConfiguration": {
                  "Types": [
                    "EDGE"
                  ]
                },
                "Policy": ""
              }
            },
            "ApiGatewayResourceRender": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Fn::GetAtt": [
                    "ApiGatewayRestApi",
                    "RootResourceId"
                  ]
                },
                "PathPart": "render",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayResourceStatus": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Fn::GetAtt": [
                    "ApiGatewayRestApi",
                    "RootResourceId"
                  ]
                },
                "PathPart": "status",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayMethodRenderPost": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "POST",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceRender"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "RenderVideoLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "RenderVideoLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodStatusGet": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "GET",
                "RequestParameters": {
                  "method.request.querystring.renderId": true
                },
                "ResourceId": {
                  "Ref": "ApiGatewayResourceStatus"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "GetStatusLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": [],
                "RequestValidatorId": {
                  "Ref": "ApiGatewayRemotionapiRequestValidator"
                }
              },
              "DependsOn": [
                "GetStatusLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayRemotionapiRequestValidator": {
              "Type": "AWS::ApiGateway::RequestValidator",
              "Properties": {
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ValidateRequestBody": true,
                "ValidateRequestParameters": true,
                "Name": "remotion-api-dev | Validate request body and querystring parameters"
              }
            },
            "ApiGatewayDeployment1748354811320": {
              "Type": "AWS::ApiGateway::Deployment",
              "Properties": {
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "StageName": "dev"
              },
              "DependsOn": [
                "ApiGatewayMethodRenderPost",
                "ApiGatewayMethodStatusGet"
              ]
            },
            "RenderVideoLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "RenderVideoLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "GetStatusLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "GetStatusLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            }
          },
          "Outputs": {
            "ServerlessDeploymentBucketName": {
              "Value": "manu-remotion-deployments",
              "Export": {
                "Name": "sls-remotion-api-dev-ServerlessDeploymentBucketName"
              }
            },
            "RenderVideoLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "RenderVideoLambdaVersionJMwhTgLUo9ZwY4PwvMkRMpGf8po2mXIzH1nYsKnaA0"
              },
              "Export": {
                "Name": "sls-remotion-api-dev-RenderVideoLambdaFunctionQualifiedArn"
              }
            },
            "GetStatusLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "GetStatusLambdaVersionXJbTdMPu5EOgS9n40ih9hwk6bThTll6uo8MpdLCEqzU"
              },
              "Export": {
                "Name": "sls-remotion-api-dev-GetStatusLambdaFunctionQualifiedArn"
              }
            },
            "ServiceEndpoint": {
              "Description": "URL of the service endpoint",
              "Value": {
                "Fn::Join": [
                  "",
                  [
                    "https://",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    ".execute-api.",
                    {
                      "Ref": "AWS::Region"
                    },
                    ".",
                    {
                      "Ref": "AWS::URLSuffix"
                    },
                    "/dev"
                  ]
                ]
              },
              "Export": {
                "Name": "sls-remotion-api-dev-ServiceEndpoint"
              }
            }
          }
        },
        "vpc": {}
      },
      "functions": {
        "renderVideo": {
          "handler": "handler.renderVideo",
          "events": [
            {
              "http": {
                "path": "render",
                "method": "post",
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "remotion-api-dev-renderVideo",
          "package": {},
          "memory": 1024,
          "timeout": 29,
          "runtime": "nodejs18.x",
          "vpc": {},
          "versionLogicalId": "RenderVideoLambdaVersionJMwhTgLUo9ZwY4PwvMkRMpGf8po2mXIzH1nYsKnaA0"
        },
        "getStatus": {
          "handler": "handler.getStatus",
          "events": [
            {
              "http": {
                "path": "status",
                "method": "get",
                "request": {
                  "parameters": {
                    "method.request.querystring.renderId": true
                  }
                },
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "remotion-api-dev-getStatus",
          "package": {},
          "memory": 1024,
          "timeout": 29,
          "runtime": "nodejs18.x",
          "vpc": {},
          "versionLogicalId": "GetStatusLambdaVersionXJbTdMPu5EOgS9n40ih9hwk6bThTll6uo8MpdLCEqzU"
        }
      },
      "custom": {
        "stages": [
          "dev",
          "prod"
        ]
      }
    },
    "provider": {
      "name": "aws",
      "runtime": "nodejs18.x",
      "region": "us-east-1",
      "timeout": 29,
      "deploymentBucket": "manu-remotion-deployments",
      "environment": {
        "REMOTION_ENV": "dev"
      },
      "iam": {
        "role": {
          "statements": [
            {
              "Effect": "Allow",
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
                "logs:TagResource",
                "lambda:InvokeFunction",
                "lambda:GetFunction",
                "s3:*",
                "ssm:*"
              ],
              "Resource": "*"
            }
          ]
        }
      },
      "stage": "dev",
      "versionFunctions": true,
      "deploymentBucketObject": {
        "name": "manu-remotion-deployments"
      },
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "RenderVideoLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/remotion-api-dev-renderVideo"
            }
          },
          "GetStatusLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/remotion-api-dev-getStatus"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "remotion-api",
                        "dev",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup",
                          "logs:TagResource"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/remotion-api-dev*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/remotion-api-dev*:*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogGroup",
                          "logs:CreateLogStream",
                          "logs:PutLogEvents",
                          "logs:TagResource",
                          "lambda:InvokeFunction",
                          "lambda:GetFunction",
                          "s3:*",
                          "ssm:*"
                        ],
                        "Resource": "*"
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "remotion-api",
                    "dev",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "RenderVideoLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "manu-remotion-deployments",
                "S3Key": "serverless/remotion-api/dev/1748354823513-2025-05-27T14:07:03.513Z/remotion-api.zip"
              },
              "Handler": "handler.renderVideo",
              "Runtime": "nodejs18.x",
              "FunctionName": "remotion-api-dev-renderVideo",
              "MemorySize": 1024,
              "Timeout": 29,
              "Environment": {
                "Variables": {
                  "REMOTION_ENV": "dev"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "RenderVideoLogGroup"
            ]
          },
          "GetStatusLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "manu-remotion-deployments",
                "S3Key": "serverless/remotion-api/dev/1748354823513-2025-05-27T14:07:03.513Z/remotion-api.zip"
              },
              "Handler": "handler.getStatus",
              "Runtime": "nodejs18.x",
              "FunctionName": "remotion-api-dev-getStatus",
              "MemorySize": 1024,
              "Timeout": 29,
              "Environment": {
                "Variables": {
                  "REMOTION_ENV": "dev"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "GetStatusLogGroup"
            ]
          },
          "RenderVideoLambdaVersionJMwhTgLUo9ZwY4PwvMkRMpGf8po2mXIzH1nYsKnaA0": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "RenderVideoLambdaFunction"
              },
              "CodeSha256": "pJzxip8t4MiFBI5S372LiaB3phn8F2NLpZCEo9zLL5Q="
            }
          },
          "GetStatusLambdaVersionXJbTdMPu5EOgS9n40ih9hwk6bThTll6uo8MpdLCEqzU": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "GetStatusLambdaFunction"
              },
              "CodeSha256": "pJzxip8t4MiFBI5S372LiaB3phn8F2NLpZCEo9zLL5Q="
            }
          },
          "ApiGatewayRestApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
              "Name": "dev-remotion-api",
              "EndpointConfiguration": {
                "Types": [
                  "EDGE"
                ]
              },
              "Policy": ""
            }
          },
          "ApiGatewayResourceRender": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "render",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceStatus": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "status",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodRenderPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceRender"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": "<REDACTED>",
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "RenderVideoLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "RenderVideoLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodStatusGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {
                "method.request.querystring.renderId": true
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceStatus"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": "<REDACTED>",
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "GetStatusLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": [],
              "RequestValidatorId": {
                "Ref": "ApiGatewayRemotionapiRequestValidator"
              }
            },
            "DependsOn": [
              "GetStatusLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayRemotionapiRequestValidator": {
            "Type": "AWS::ApiGateway::RequestValidator",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ValidateRequestBody": true,
              "ValidateRequestParameters": true,
              "Name": "remotion-api-dev | Validate request body and querystring parameters"
            }
          },
          "ApiGatewayDeployment1748354811320": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "StageName": "dev"
            },
            "DependsOn": [
              "ApiGatewayMethodRenderPost",
              "ApiGatewayMethodStatusGet"
            ]
          },
          "RenderVideoLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "RenderVideoLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "GetStatusLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "GetStatusLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": "manu-remotion-deployments",
            "Export": {
              "Name": "sls-remotion-api-dev-ServerlessDeploymentBucketName"
            }
          },
          "RenderVideoLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "RenderVideoLambdaVersionJMwhTgLUo9ZwY4PwvMkRMpGf8po2mXIzH1nYsKnaA0"
            },
            "Export": {
              "Name": "sls-remotion-api-dev-RenderVideoLambdaFunctionQualifiedArn"
            }
          },
          "GetStatusLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "GetStatusLambdaVersionXJbTdMPu5EOgS9n40ih9hwk6bThTll6uo8MpdLCEqzU"
            },
            "Export": {
              "Name": "sls-remotion-api-dev-GetStatusLambdaFunctionQualifiedArn"
            }
          },
          "ServiceEndpoint": {
            "Description": "URL of the service endpoint",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  },
                  "/dev"
                ]
              ]
            },
            "Export": {
              "Name": "sls-remotion-api-dev-ServiceEndpoint"
            }
          }
        }
      },
      "vpc": {}
    },
    "dashboard": {
      "isEnabledForService": false,
      "requiredAuthentication": false,
      "orgFeaturesInUse": null,
      "orgObservabilityIntegrations": null,
      "serviceAppId": null,
      "serviceProvider": null,
      "instanceParameters": null
    },
    "serviceRawFile": "service: remotion-api\n\nprovider:\n  name: aws\n  runtime: nodejs18.x\n  region: us-east-1\n  timeout: 29\n  deploymentBucket:\n    name: manu-remotion-deployments\n  environment:\n    REMOTION_ENV: ${opt:stage, 'dev'}\n  iam:\n    role:\n      statements:\n        - Effect: Allow\n          Action:\n            - logs:CreateLogGroup\n            - logs:CreateLogStream\n            - logs:PutLogEvents\n            - logs:TagResource\n            - lambda:InvokeFunction\n            - lambda:GetFunction\n            - s3:*\n            - ssm:*\n          Resource: \"*\"\n\nfunctions:\n  renderVideo:\n    handler: handler.renderVideo\n    events:\n      - http:\n          path: render\n          method: post\n\n  getStatus:\n    handler: handler.getStatus\n    events:\n      - http:\n          path: status\n          method: get\n          request:\n            parameters:\n              querystrings:\n                renderId: true\n\ncustom:\n  stages:\n    - dev\n    - prod\n",
    "command": [
      "deploy"
    ],
    "options": {
      "stage": "dev"
    },
    "orgId": "965cc0cb-affc-4adf-87ca-29c31431d746",
    "orgName": "aiatelier",
    "userId": "DsH4S4CQqlVdc84JD7",
    "userName": "aiatelier",
    "serviceProviderAwsAccountId": "339712823540",
    "serviceProviderAwsCfStackName": "remotion-api-dev",
    "serviceProviderAwsCfStackId": "arn:aws:cloudformation:us-east-1:339712823540:stack/remotion-api-dev/2a279a50-2cfa-11f0-a8be-1247e74ebebf",
    "serviceProviderAwsCfStackCreated": "2025-05-09T17:22:21.043Z",
    "serviceProviderAwsCfStackUpdated": "2025-05-27T09:44:23.376Z",
    "serviceProviderAwsCfStackStatus": "UPDATE_COMPLETE",
    "serviceProviderAwsCfStackOutputs": [
      {
        "OutputKey": "RenderVideoLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:339712823540:function:remotion-api-dev-renderVideo:32",
        "Description": "Current Lambda function version",
        "ExportName": "sls-remotion-api-dev-RenderVideoLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "GetStatusLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:339712823540:function:remotion-api-dev-getStatus:33",
        "Description": "Current Lambda function version",
        "ExportName": "sls-remotion-api-dev-GetStatusLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "ServiceEndpoint",
        "OutputValue": "https://ezh73b8y6l.execute-api.us-east-1.amazonaws.com/dev",
        "Description": "URL of the service endpoint",
        "ExportName": "sls-remotion-api-dev-ServiceEndpoint"
      },
      {
        "OutputKey": "ServerlessDeploymentBucketName",
        "OutputValue": "manu-remotion-deployments",
        "ExportName": "sls-remotion-api-dev-ServerlessDeploymentBucketName"
      }
    ],
    "compiledCloudFormationTemplate": {
      "AWSTemplateFormatVersion": "2010-09-09",
      "Description": "The AWS CloudFormation template for this Serverless application",
      "Resources": {
        "RenderVideoLogGroup": {
          "Type": "AWS::Logs::LogGroup",
          "Properties": {
            "LogGroupName": "/aws/lambda/remotion-api-dev-renderVideo"
          }
        },
        "GetStatusLogGroup": {
          "Type": "AWS::Logs::LogGroup",
          "Properties": {
            "LogGroupName": "/aws/lambda/remotion-api-dev-getStatus"
          }
        },
        "IamRoleLambdaExecution": {
          "Type": "AWS::IAM::Role",
          "Properties": {
            "AssumeRolePolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Principal": {
                    "Service": [
                      "lambda.amazonaws.com"
                    ]
                  },
                  "Action": [
                    "sts:AssumeRole"
                  ]
                }
              ]
            },
            "Policies": [
              {
                "PolicyName": {
                  "Fn::Join": [
                    "-",
                    [
                      "remotion-api",
                      "dev",
                      "lambda"
                    ]
                  ]
                },
                "PolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Action": [
                        "logs:CreateLogStream",
                        "logs:CreateLogGroup",
                        "logs:TagResource"
                      ],
                      "Resource": [
                        {
                          "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/remotion-api-dev*:*"
                        }
                      ]
                    },
                    {
                      "Effect": "Allow",
                      "Action": [
                        "logs:PutLogEvents"
                      ],
                      "Resource": [
                        {
                          "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/remotion-api-dev*:*:*"
                        }
                      ]
                    },
                    {
                      "Effect": "Allow",
                      "Action": [
                        "logs:CreateLogGroup",
                        "logs:CreateLogStream",
                        "logs:PutLogEvents",
                        "logs:TagResource",
                        "lambda:InvokeFunction",
                        "lambda:GetFunction",
                        "s3:*",
                        "ssm:*"
                      ],
                      "Resource": "*"
                    }
                  ]
                }
              }
            ],
            "Path": "/",
            "RoleName": {
              "Fn::Join": [
                "-",
                [
                  "remotion-api",
                  "dev",
                  {
                    "Ref": "AWS::Region"
                  },
                  "lambdaRole"
                ]
              ]
            }
          }
        },
        "RenderVideoLambdaFunction": {
          "Type": "AWS::Lambda::Function",
          "Properties": {
            "Code": {
              "S3Bucket": "manu-remotion-deployments",
              "S3Key": "serverless/remotion-api/dev/1748354823513-2025-05-27T14:07:03.513Z/remotion-api.zip"
            },
            "Handler": "handler.renderVideo",
            "Runtime": "nodejs18.x",
            "FunctionName": "remotion-api-dev-renderVideo",
            "MemorySize": 1024,
            "Timeout": 29,
            "Environment": {
              "Variables": {
                "REMOTION_ENV": "dev"
              }
            },
            "Role": {
              "Fn::GetAtt": [
                "IamRoleLambdaExecution",
                "Arn"
              ]
            }
          },
          "DependsOn": [
            "RenderVideoLogGroup"
          ]
        },
        "GetStatusLambdaFunction": {
          "Type": "AWS::Lambda::Function",
          "Properties": {
            "Code": {
              "S3Bucket": "manu-remotion-deployments",
              "S3Key": "serverless/remotion-api/dev/1748354823513-2025-05-27T14:07:03.513Z/remotion-api.zip"
            },
            "Handler": "handler.getStatus",
            "Runtime": "nodejs18.x",
            "FunctionName": "remotion-api-dev-getStatus",
            "MemorySize": 1024,
            "Timeout": 29,
            "Environment": {
              "Variables": {
                "REMOTION_ENV": "dev"
              }
            },
            "Role": {
              "Fn::GetAtt": [
                "IamRoleLambdaExecution",
                "Arn"
              ]
            }
          },
          "DependsOn": [
            "GetStatusLogGroup"
          ]
        },
        "RenderVideoLambdaVersionJMwhTgLUo9ZwY4PwvMkRMpGf8po2mXIzH1nYsKnaA0": {
          "Type": "AWS::Lambda::Version",
          "DeletionPolicy": "Retain",
          "Properties": {
            "FunctionName": {
              "Ref": "RenderVideoLambdaFunction"
            },
            "CodeSha256": "pJzxip8t4MiFBI5S372LiaB3phn8F2NLpZCEo9zLL5Q="
          }
        },
        "GetStatusLambdaVersionXJbTdMPu5EOgS9n40ih9hwk6bThTll6uo8MpdLCEqzU": {
          "Type": "AWS::Lambda::Version",
          "DeletionPolicy": "Retain",
          "Properties": {
            "FunctionName": {
              "Ref": "GetStatusLambdaFunction"
            },
            "CodeSha256": "pJzxip8t4MiFBI5S372LiaB3phn8F2NLpZCEo9zLL5Q="
          }
        },
        "ApiGatewayRestApi": {
          "Type": "AWS::ApiGateway::RestApi",
          "Properties": {
            "Name": "dev-remotion-api",
            "EndpointConfiguration": {
              "Types": [
                "EDGE"
              ]
            },
            "Policy": ""
          }
        },
        "ApiGatewayResourceRender": {
          "Type": "AWS::ApiGateway::Resource",
          "Properties": {
            "ParentId": {
              "Fn::GetAtt": [
                "ApiGatewayRestApi",
                "RootResourceId"
              ]
            },
            "PathPart": "render",
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            }
          }
        },
        "ApiGatewayResourceStatus": {
          "Type": "AWS::ApiGateway::Resource",
          "Properties": {
            "ParentId": {
              "Fn::GetAtt": [
                "ApiGatewayRestApi",
                "RootResourceId"
              ]
            },
            "PathPart": "status",
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            }
          }
        },
        "ApiGatewayMethodRenderPost": {
          "Type": "AWS::ApiGateway::Method",
          "Properties": {
            "HttpMethod": "POST",
            "RequestParameters": {},
            "ResourceId": {
              "Ref": "ApiGatewayResourceRender"
            },
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            },
            "ApiKeyRequired": "<REDACTED>",
            "AuthorizationType": "NONE",
            "Integration": {
              "IntegrationHttpMethod": "POST",
              "Type": "AWS_PROXY",
              "Uri": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":apigateway:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":lambda:path/2015-03-31/functions/",
                    {
                      "Fn::GetAtt": [
                        "RenderVideoLambdaFunction",
                        "Arn"
                      ]
                    },
                    "/invocations"
                  ]
                ]
              }
            },
            "MethodResponses": []
          },
          "DependsOn": [
            "RenderVideoLambdaPermissionApiGateway"
          ]
        },
        "ApiGatewayMethodStatusGet": {
          "Type": "AWS::ApiGateway::Method",
          "Properties": {
            "HttpMethod": "GET",
            "RequestParameters": {
              "method.request.querystring.renderId": true
            },
            "ResourceId": {
              "Ref": "ApiGatewayResourceStatus"
            },
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            },
            "ApiKeyRequired": "<REDACTED>",
            "AuthorizationType": "NONE",
            "Integration": {
              "IntegrationHttpMethod": "POST",
              "Type": "AWS_PROXY",
              "Uri": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":apigateway:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":lambda:path/2015-03-31/functions/",
                    {
                      "Fn::GetAtt": [
                        "GetStatusLambdaFunction",
                        "Arn"
                      ]
                    },
                    "/invocations"
                  ]
                ]
              }
            },
            "MethodResponses": [],
            "RequestValidatorId": {
              "Ref": "ApiGatewayRemotionapiRequestValidator"
            }
          },
          "DependsOn": [
            "GetStatusLambdaPermissionApiGateway"
          ]
        },
        "ApiGatewayRemotionapiRequestValidator": {
          "Type": "AWS::ApiGateway::RequestValidator",
          "Properties": {
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            },
            "ValidateRequestBody": true,
            "ValidateRequestParameters": true,
            "Name": "remotion-api-dev | Validate request body and querystring parameters"
          }
        },
        "ApiGatewayDeployment1748354811320": {
          "Type": "AWS::ApiGateway::Deployment",
          "Properties": {
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            },
            "StageName": "dev"
          },
          "DependsOn": [
            "ApiGatewayMethodRenderPost",
            "ApiGatewayMethodStatusGet"
          ]
        },
        "RenderVideoLambdaPermissionApiGateway": {
          "Type": "AWS::Lambda::Permission",
          "Properties": {
            "FunctionName": {
              "Fn::GetAtt": [
                "RenderVideoLambdaFunction",
                "Arn"
              ]
            },
            "Action": "lambda:InvokeFunction",
            "Principal": "apigateway.amazonaws.com",
            "SourceArn": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":execute-api:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":",
                  {
                    "Ref": "AWS::AccountId"
                  },
                  ":",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  "/*/*"
                ]
              ]
            }
          }
        },
        "GetStatusLambdaPermissionApiGateway": {
          "Type": "AWS::Lambda::Permission",
          "Properties": {
            "FunctionName": {
              "Fn::GetAtt": [
                "GetStatusLambdaFunction",
                "Arn"
              ]
            },
            "Action": "lambda:InvokeFunction",
            "Principal": "apigateway.amazonaws.com",
            "SourceArn": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":execute-api:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":",
                  {
                    "Ref": "AWS::AccountId"
                  },
                  ":",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  "/*/*"
                ]
              ]
            }
          }
        }
      },
      "Outputs": {
        "ServerlessDeploymentBucketName": {
          "Value": "manu-remotion-deployments",
          "Export": {
            "Name": "sls-remotion-api-dev-ServerlessDeploymentBucketName"
          }
        },
        "RenderVideoLambdaFunctionQualifiedArn": {
          "Description": "Current Lambda function version",
          "Value": {
            "Ref": "RenderVideoLambdaVersionJMwhTgLUo9ZwY4PwvMkRMpGf8po2mXIzH1nYsKnaA0"
          },
          "Export": {
            "Name": "sls-remotion-api-dev-RenderVideoLambdaFunctionQualifiedArn"
          }
        },
        "GetStatusLambdaFunctionQualifiedArn": {
          "Description": "Current Lambda function version",
          "Value": {
            "Ref": "GetStatusLambdaVersionXJbTdMPu5EOgS9n40ih9hwk6bThTll6uo8MpdLCEqzU"
          },
          "Export": {
            "Name": "sls-remotion-api-dev-GetStatusLambdaFunctionQualifiedArn"
          }
        },
        "ServiceEndpoint": {
          "Description": "URL of the service endpoint",
          "Value": {
            "Fn::Join": [
              "",
              [
                "https://",
                {
                  "Ref": "ApiGatewayRestApi"
                },
                ".execute-api.",
                {
                  "Ref": "AWS::Region"
                },
                ".",
                {
                  "Ref": "AWS::URLSuffix"
                },
                "/dev"
              ]
            ]
          },
          "Export": {
            "Name": "sls-remotion-api-dev-ServiceEndpoint"
          }
        }
      }
    }
  }
}